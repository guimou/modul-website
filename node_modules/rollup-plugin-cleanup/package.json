{
  "_args": [
    [
      {
        "raw": "rollup-plugin-cleanup@^0.1.4",
        "scope": null,
        "escapedName": "rollup-plugin-cleanup",
        "name": "rollup-plugin-cleanup",
        "rawSpec": "^0.1.4",
        "spec": ">=0.1.4 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\guill\\Dev\\modul-website\\node_modules\\vue-touch"
    ]
  ],
  "_from": "rollup-plugin-cleanup@>=0.1.4 <0.2.0",
  "_id": "rollup-plugin-cleanup@0.1.4",
  "_inCache": true,
  "_location": "/rollup-plugin-cleanup",
  "_nodeVersion": "6.5.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/rollup-plugin-cleanup-0.1.4.tgz_1473722850873_0.07035008887760341"
  },
  "_npmUser": {
    "name": "amarcruz",
    "email": "amarcruz@yahoo.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rollup-plugin-cleanup@^0.1.4",
    "scope": null,
    "escapedName": "rollup-plugin-cleanup",
    "name": "rollup-plugin-cleanup",
    "rawSpec": "^0.1.4",
    "spec": ">=0.1.4 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/vue-touch"
  ],
  "_resolved": "https://registry.npmjs.org/rollup-plugin-cleanup/-/rollup-plugin-cleanup-0.1.4.tgz",
  "_shasum": "9fed3ab4300988a882d63de3321e410cdafc6331",
  "_shrinkwrap": null,
  "_spec": "rollup-plugin-cleanup@^0.1.4",
  "_where": "C:\\Users\\guill\\Dev\\modul-website\\node_modules\\vue-touch",
  "author": {
    "name": "aMarCruz",
    "email": "amarcruzbox-git@yahoo.com",
    "url": "https://github.com/aMarCruz"
  },
  "bugs": {
    "url": "https://github.com/aMarCruz/rollup-plugin-cleanup/issues"
  },
  "dependencies": {
    "acorn": "^3.3.0",
    "magic-string": "^0.16.0",
    "rollup-pluginutils": "^1.5.2"
  },
  "description": "Rollup plugin to trim trailing spaces, compact empty lines, and normalize line endings",
  "devDependencies": {
    "eslint": "^3.4.0",
    "expect": "^1.20.2",
    "mocha": "^3.0.2",
    "node-version-check": "^2.1.1",
    "rollup": "^0.34.13",
    "rollup-plugin-buble": "^0.13.0",
    "rollup-plugin-jsx": "^1.0.3",
    "rollup-plugin-riot": "^0.4.2"
  },
  "directories": {},
  "dist": {
    "shasum": "9fed3ab4300988a882d63de3321e410cdafc6331",
    "tarball": "https://registry.npmjs.org/rollup-plugin-cleanup/-/rollup-plugin-cleanup-0.1.4.tgz"
  },
  "engines": {
    "node": ">=0.12"
  },
  "files": [
    "dist",
    "src"
  ],
  "gitHead": "6328913bd65e80dc74272088aba568a218a1f232",
  "homepage": "https://github.com/aMarCruz/rollup-plugin-cleanup",
  "jsnext:main": "dist/rollup-plugin-cleanup.es.js",
  "keywords": [
    "rollup",
    "rollup-plugin",
    "javascript",
    "es2015",
    "es6",
    "modules",
    "cleanup"
  ],
  "license": "MIT",
  "main": "dist/rollup-plugin-cleanup.cjs.js",
  "maintainers": [
    {
      "name": "amarcruz",
      "email": "amarcruz@yahoo.com"
    }
  ],
  "name": "rollup-plugin-cleanup",
  "optionalDependencies": {},
  "readme": "[![Build Status][build-image]][build-url]\n[![AppVeyor Status][wbuild-image]][wbuild-url]\n[![npm Version][npm-image]][npm-url]\n[![License][license-image]][license-url]\n\n# rollup-plugin-cleanup\n\n[Rollup](http://rollupjs.org/) plugin to remove comments, trim trailing spaces, compact empty lines, and normalize line endings in JavaScript files.\n\nWith *cleanup*, you have:\n\n* Removal of JavaScript comments through powerful filters (configurable)\n* Empty lines compactation (configurable)\n* Remotion of trailing spaces\n* Normalization of line endings (Unix, Mac, or Windows)\n* Source Map support\n\n**IMPORTANT:**\n\nBecause _rollup_ is a JavaScript bundler and _cleanup_ is a JavaScript post-processor, it should work with any JavaScript dialect handled by rollup, but you need put cleanup last in your plugin list.\n\n\n**Why not Uglify?**\n\nUglify is a excelent *minifier* but you have little control over the results, while with cleanup your coding style remains intact and removal of comments is strictly under your control.\n\n## Install\n\n```sh\nnpm install rollup-plugin-cleanup --save-dev\n```\n\n## Usage\n\n```js\nimport { rollup } from 'rollup';\nimport awesome from 'rollup-plugin-awesome';\nimport cleanup from 'rollup-plugin-cleanup';\n\nrollup({\n  entry: 'src/main.js',\n  plugins: [\n    awesome(),        // other plugins\n    cleanup()         // cleanup here\n  ]\n}).then(...)\n```\n\nThat's it.\n\nBy default, only the .js files are processed, but it can be useful for any non-binary file if you pass the option `comments='all'` to the plugin.\nYou can restrict the accepted files using the options \"include\", \"exclude\", and \"extensions\" (see below).\n\n## Options\n\nName | Default | Description\n---- | ------- | -----------\ncomments | `['some']` | Regex, array of filter names, \"all\" to keep all, or \"none\" to remove all.\nmaxEmptyLines | `0` | Use a positive value or -1 to keep all the lines\nnormalizeEols | `unix` | Allowed values: \"unix\", \"mac\", \"win\"\nsourceType | `'module'` | For the parser, change it to \"script\" if necessary.\nextensions | `['.js', '.jsx', '.tag']` | String or array of strings with extensions of files to process.\n\n\\* Source Map support is given through the rollup `sourceMap` option.\n\n### Predefined Filters\n\nName    | Regex | Site/Description\n--------|-------|-----------------\nlicense | `/@license\\b/` | Preserve comments with `\"@license\"` inside.\nsome    | `/(?:@license|@preserve|@cc_on)\\b/` | Like the [uglify](https://github.com/mishoo/UglifyJS2) default\njsdoc   | `/^\\*\\*[^@]*@[A-Za-z]/` | [JSDoc](http://usejsdoc.org/)\njslint  | `/^[\\/\\*](?:jslint|global|property)\\b/` | [JSLint](http://www.jslint.com/help.html)\njshint  | `/^[\\/\\*]\\s*(?:jshint|globals|exported)\\s/` | [JSHint](http://jshint.com/docs/#inline-configuration)\neslint  | `/^[\\/\\*]\\s*(?:eslint(?:\\s|-env|-disable|-enable)|global\\s)/` | [ESLint](http://eslint.org/docs/user-guide/configuring)\njscs    | `/^[\\/\\*]\\s*jscs:[ed]/` | [jscs](http://jscs.info/overview)\nistanbul | `/^[\\/\\*]\\s*istanbul\\s/` | [istanbul](https://gotwarlost.github.io/istanbul/)\nsrcmaps | `/^.[#@]\\ssource(?:Mapping)?URL=/` | [Source Map](https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit)\n\n## TODO\n\nThis is work in progress, so please update cleanup constantly, I hope the first stable version does not take too long.\n\n- [ ] 100% test coverage and more tests\n- [ ] async mode\n- [ ] Configuration from the file system\n- [ ] Better documentation*\n- [ ] You tell me...\n\n---\n\n\\* _For me, write in english is 10x harder than coding JS, so contributions are welcome..._\n\n[build-image]:    https://img.shields.io/travis/aMarCruz/rollup-plugin-cleanup/master.svg?style=flat-square\n[build-url]:      https://travis-ci.org/aMarCruz/rollup-plugin-cleanup\n\n[wbuild-image]:   https://img.shields.io/appveyor/ci/aMarCruz/rollup-plugin-cleanup/master.svg?style=flat-square\n[wbuild-url]:     https://ci.appveyor.com/project/aMarCruz/rollup-plugin-cleanup/branch/master\n\n[npm-image]:      https://img.shields.io/npm/v/rollup-plugin-cleanup.svg?style=flat-square\n[npm-url]:        https://www.npmjs.com/package/rollup-plugin-cleanup\n\n[license-image]:  https://img.shields.io/npm/l/express.svg?style=flat-square\n[license-url]:    https://github.com/aMarCruz/rollup-plugin-cleanup/blob/master/LICENSE\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aMarCruz/rollup-plugin-cleanup.git"
  },
  "scripts": {
    "build": "rm -rf dist/* && npm run build:cjs && npm run build:es6",
    "build:cjs": "rollup -c -f cjs -o dist/rollup-plugin-cleanup.cjs.js",
    "build:es6": "rollup -c -f es -o dist/rollup-plugin-cleanup.es.js",
    "lint": "node-version-gte-4 && eslint src test/index.js || node-version-lt-4",
    "prepublish": "npm run lint && npm run build:es6 && npm test",
    "pretest": "npm run build:cjs",
    "test": "node-version-gte-4 && mocha || mocha --compilers js:./buble-register"
  },
  "version": "0.1.4"
}
